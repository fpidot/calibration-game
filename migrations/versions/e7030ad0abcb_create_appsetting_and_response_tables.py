"""Create AppSetting and Response tables

Revision ID: e7030ad0abcb
Revises: 
Create Date: 2025-04-13 10:11:24.694347

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'e7030ad0abcb'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('app_settings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('setting_key', sa.String(length=100), nullable=False),
    sa.Column('setting_value', sa.Text(), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('app_settings', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_app_settings_setting_key'), ['setting_key'], unique=True)

    op.create_table('responses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('session_id', sa.String(length=100), nullable=True),
    sa.Column('wiki_page_title', sa.String(length=255), nullable=False),
    sa.Column('question_text', sa.Text(), nullable=False),
    sa.Column('answer_options', sa.Text(), nullable=True),
    sa.Column('correct_answer', sa.String(length=10), nullable=False),
    sa.Column('user_answer', sa.String(length=10), nullable=True),
    sa.Column('user_confidence', sa.Integer(), nullable=True),
    sa.Column('is_correct', sa.Boolean(), nullable=True),
    sa.Column('brier_score', sa.Float(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('responses', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_responses_session_id'), ['session_id'], unique=False)

    op.drop_table('user_response')
    op.drop_table('app_setting')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('app_setting',
    sa.Column('key', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('value', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('key', name='app_setting_pkey')
    )
    op.create_table('user_response',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('session_id', sa.VARCHAR(length=80), autoincrement=False, nullable=False),
    sa.Column('question_text', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('correct_answer', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('submitted_answer', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('confidence', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('is_correct', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('brier_score', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('source_title', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='user_response_pkey')
    )
    with op.batch_alter_table('responses', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_responses_session_id'))

    op.drop_table('responses')
    with op.batch_alter_table('app_settings', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_app_settings_setting_key'))

    op.drop_table('app_settings')
    # ### end Alembic commands ###
